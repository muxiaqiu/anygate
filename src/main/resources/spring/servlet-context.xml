<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
    	http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <context:component-scan base-package="com.intime.soa.*.controller, com.intime.soa.*"/>

    <bean id="jacksonHttpMessageConverter"
          class="com.intime.soa.framework.converter.DefaultJacksonHttpMessageConverter">
        <!--<property name="supportedMediaTypes" value="text/plain;charset=UTF-8"/>-->
        <property name="supportedMediaTypes" value="application/json;charset=UTF-8"/>
        <property name="prettyPrint" value="true"/>
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters>

            <!-- StringHttpMessageConverter编码为UTF-8，防止乱码 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
                <property name="supportedMediaTypes">
                    <list>
                        <bean class="org.springframework.http.MediaType">
                            <constructor-arg index="0" value="text"/>
                            <constructor-arg index="1" value="plain"/>
                            <constructor-arg index="2" value="UTF-8"/>
                        </bean>
                        <bean class="org.springframework.http.MediaType">
                            <constructor-arg index="0" value="*"/>
                            <constructor-arg index="1" value="*"/>
                            <constructor-arg index="2" value="UTF-8"/>
                        </bean>
                    </list>
                </property>
            </bean>

            <ref bean="jacksonHttpMessageConverter"/>

        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:interceptors>

        <bean id="securityBlackListInterceptor" class="com.intime.soa.framework.Security.SecurityBlackListInterceptor"/>
        <!--<bean id="securityWhiteListInterceptor" class="com.intime.soa.framework.Security.SecurityWhiteListInterceptor"/>-->

        <bean id="localeChangeInterceptor"
              class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang"/>
        </bean>

        <!--身份验证的拦截器-->
        <!--身份验证的拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>

            <mvc:exclude-mapping path="/**/favicon.ico"/>
            <mvc:exclude-mapping path="/anygate.html"/>
            <mvc:exclude-mapping path="/gate"/>
            <mvc:exclude-mapping path="/selfcheck"/>
            <mvc:exclude-mapping path="/intimejs/**"/>

            <mvc:exclude-mapping path="/**/webjars/**"/>
            <mvc:exclude-mapping path="/**/v2/api-docs/**"/>
            <mvc:exclude-mapping path="/**/swagger-resources/**"/>
            <mvc:exclude-mapping path="/**/swagger-ui.html"/>
            <mvc:exclude-mapping path="/**/swagger/**"/>

            <bean id="noTokenInterceptor" class="com.intime.soa.anygate.auth.AnygateAuthInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--<mvc:interceptors>-->
    <!--&lt;!&ndash;身份验证的拦截器&ndash;&gt;-->
    <!--<bean id="authorizationInterceptor" class="com.intime.soa.framework.auth.AuthorizationInterceptor">-->
    <!--&lt;!&ndash;验证信息存储的Http头&ndash;&gt;-->
    <!--<property name="httpCookieName" value="authorization" />-->
    <!--&lt;!&ndash;验证失败时的错误信息&ndash;&gt;-->
    <!--<property name="unauthorizedErrorMessage" value="令牌失效，请重新登录" />-->
    <!--&lt;!&ndash;管理验证信息的bean&ndash;&gt;-->
    <!--<property name="redisCacheService" ref="redisCacheService" />-->
    <!--</bean>-->
    <!--</mvc:interceptors>-->

    <!--<mvc:interceptors>-->
    <!--&lt;!&ndash;身份验证的拦截器&ndash;&gt;-->
    <!--<bean id="authorizationInterceptor"-->
    <!--class="com.intime.framework.interceptor.AuthorizationInterceptor"/>-->
    <!--</mvc:interceptors>-->

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
        <property name="maxUploadSize">
            <value>10485760</value><!-- 10M -->
        </property>
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
    </bean>

    <!--<mvc:annotation-driven>-->
    <!--<mvc:argument-resolvers>-->
    <!--&lt;!&ndash;配置注入登录用户的解析器&ndash;&gt;-->
    <!--<bean id="currentUserMethodArgumentResolver" class="com.intime.soa.framework.resolvers.CurrentUserMethodArgumentResolver">-->
    <!--&lt;!&ndash;需要解析的用户类&ndash;&gt;-->
    <!--<property name="userModelClass" value="java.util.Map" />-->
    <!--<property name="redisCacheService" ref="redisCacheService"/>-->
    <!--</bean>-->
    <!--</mvc:argument-resolvers>-->
    <!--</mvc:annotation-driven>-->


    <bean id="requestAspect" class="com.intime.soa.framework.processor.RequestAspect">
        <property name="requestProcessors">
            <list>
                <bean class="com.intime.soa.framework.processor.impl.RequestStatisticProcessor"/>
                <!--<bean class="com.intime.soa.framework.processor.impl.RequestAuthProcessor"/>-->
                <bean class="com.intime.soa.framework.processor.impl.RequestResultProcessor"/>
                <bean class="com.intime.soa.framework.processor.impl.RequestExceptionProcessor"/>
            </list>
        </property>
    </bean>

    <aop:config>
        <aop:aspect ref="requestAspect">
            <aop:pointcut id="requestPointCut"
                          expression="execution(@org.springframework.web.bind.annotation.RequestMapping * com.intime..*.controller..*(..))"/>
            <!--<aop:pointcut id="logPointCut" expression="execution(@com.intime.framework.annotations.Log * com.intime.api.service..*(..))"/>-->
            <!--<aop:pointcut id="logPointCut" expression="execution(* com.intime.api.service..*(..))"/>-->
            <!--<aop:pointcut id="logPointCut" expression="execution(* com.intime.api.service..*.*(..))"/>-->
            <aop:before pointcut-ref="requestPointCut" method="doBefore"/>
            <aop:around pointcut-ref="requestPointCut" method="doAround"/>
            <aop:after pointcut-ref="requestPointCut" method="doAfter"/>
            <!-- 定义Target处理后普通结果增强 -->
            <aop:after-returning pointcut-ref="requestPointCut" method="doAfterReturning"
                                 returning="result"/>
            <!-- 定义Target处理后异常增强 -->
            <aop:after-throwing pointcut-ref="requestPointCut" method="doThrowing" throwing="ex"/>
        </aop:aspect>
    </aop:config>

    <!-- Allow Exceptions to be handled in annotated methods if desired.  Otherwise fallback to the
         'restExceptionResolver' below: -->
    <bean id="exceptionHandlerExceptionResolver"
          class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
        <property name="order" value="0"/>
    </bean>

    <!--<bean id="jacksonHttpMessageConverterEx"-->
    <!--class="com.intime.soa.framework.converter.DefaultJacksonHttpMessageConverter">-->
    <!--&lt;!&ndash;<property name="supportedMediaTypes" value="text/plain;charset=UTF-8"/>&ndash;&gt;-->
    <!--<property name="prettyPrint" value="true"/>-->
    <!--</bean>-->

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"/>

    <bean id="restExceptionResolver" class="com.intime.soa.framework.exhandler.RestExceptionHandler">
        <property name="order" value="100"/>
        <property name="messageConverters">
            <list>
                <ref bean="jacksonHttpMessageConverter"/>
            </list>
        </property>
        <property name="errorResolver">
            <bean class="com.intime.soa.framework.exhandler.DefaultRestErrorResolver">
                <property name="localeResolver" ref="localeResolver"/>
                <property name="exceptionMappingDefinitions">
                    <map>
                        <!-- 404 -->
                        <entry key="com.intime.soa.api.exception.IntimeException"
                               value="404, _msg"/>
                        <entry key="com.intime.soa.framework.exception.UnknownResourceException"
                               value="404, _msg"/>
                        <entry key="com.intime.soa.framework.exception.ResourceNotFoundException"
                               value="404, _msg"/>
                        <entry key="com.intime.soa.framework.exception.InvalidRequestException"
                               value="404, _msg"/>
                        <entry key="com.intime.soa.framework.exception.IllegalParameterException"
                               value="400, _msg"/>
                        <entry key="com.intime.soa.framework.exception.ApplicationException"
                               value="400, _msg"/>

                        <!-- 500 (catch all): -->
                        <entry key="Throwable" value="500,_msg, _exmsg"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

</beans>
